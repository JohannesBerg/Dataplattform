service: dataplattform-ingest

custom:
  stage: ${opt:stage, self:provider.stage}
  ingest_lambda: ${self:custom.stage}-dataplattform_ingest

provider:
  name: aws
  stage: dev
  region: eu-central-1
  runtime: python3.7
  memorySize: 1024
  timeout: 5
  role: arn:aws:iam::275823250475:role/dataplattform_basic_lambda #TODO set up roles using serverless

package:
  individually: true
  exclude:
    - "./**"

functions:
  ingest:
    handler: ingest/ingest.handler
    name: ${self:custom.ingest_lambda}
    description: Main ingest lambda
    role: ingestRole
    layers:
      - {Ref: TimestampRandomLambdaLayer}
    package:
      include:
        - 'ingest/*.py'


resources:
  Resources:
    ingestRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: sls_Dataplattform_IngestRole
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: myPolicyName
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - dynamodb:PutItem
                  Resource:
                    - 'Fn::ImportValue': ${self:custom.stage}-dynamodb-rawtable-arn

layers:
  TimestampRandom:
    package:
      include:
        - './**' # A bug requires you to include all, see https://github.com/serverless/serverless/issues/5583
    path: layers # TODO reorganize and get the correct path
    name: ${self:custom.stage}-timestamp_random
    description: Generate unique ids
    compatibleRuntimes:
      - python3.7
